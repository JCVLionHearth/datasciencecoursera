Gracias por el ejemplo, el problema está en cómo estás creando el grupo nombre_base con word(MCOD_1, 1, 3). Esa función simplemente toma las tres primeras palabras de la cadena sin limpiar caracteres especiales, por lo que nombres como:
	•	"TRAFIGURA ENVIRONMENTAL S"
	•	"TRAFIGURA MARKETING COLOM"

no quedan agrupados como "TRAFIGURA".

⸻

✅ Solución: Normaliza los nombres para agrupar por raíz común

Podemos hacer lo siguiente:
	1.	Limpiar espacios y tildes.
	2.	Extraer un identificador base del nombre (como “TRAFIGURA”).
	3.	Agrupar por ese identificador y aplicar la moda condicionada.

⸻

✅ Código corregido:

library(dplyr)
library(stringr)

# Función para obtener la moda con mayoría
moda_con_mayoria <- function(x, umbral = 0.05) {
  x <- na.omit(x)
  if (length(x) == 0) return(NA)
  tab <- table(x)
  moda <- names(tab)[which.max(tab)]
  prop <- max(tab) / sum(tab)
  if (prop >= umbral) return(moda) else return(NA)
}

# Limpiar y extraer nombre base (por ejemplo, "TRAFIGURA")
proveedores_ciiu_imputado2 <- proveedores_ciiu_imputado %>%
  mutate(
    MCOD_clean = str_squish(str_to_upper(MCOD_1)),
    nombre_base = str_extract(MCOD_clean, "^[A-Z]+")  # Extrae solo la primera palabra
  ) %>%
  group_by(nombre_base) %>%
  mutate(
    moda_valor = moda_con_mayoria(CIIU_final, umbral = 0.05),
    CIIU_final = if_else(is.na(CIIU_final), moda_valor, CIIU_final)
  ) %>%
  ungroup() %>%
  select(-MCOD_clean, -nombre_base, -moda_valor)


⸻

🔍 Qué hace este código:
	•	str_squish() elimina espacios dobles.
	•	str_to_upper() estandariza mayúsculas.
	•	str_extract(..., "^[A-Z]+") captura la primera palabra (marca principal).
	•	Agrupa por esa base común (por ejemplo "TRAFIGURA").
	•	Imputa el código CIIU más frecuente si al menos el 5% lo usa (umbral = 0.05).

⸻

🧪 Resultado esperado con tus datos de ejemplo:

MCOD_1	ANTES	CIIU_final
TRAFIGURA ENVIRONMENTAL S	NA	4661
TRAFIGURA TRADING LLC	4669	4669
TRAFIGURA SECURITISATION	NA	4661
TRAFIGURA MARITIME LOGIST	6412	6412
TRAFIGURA PTE LTD	4290	4290
C.I. TRAFIGURA PETROLEUM	4661	4661
TRAFIGURA ENERGY COLOMBIA	4661	4661
TRAFIGURA MARKETING COLOM	4661	4661


⸻

¿Quieres que además le dé prioridad a los códigos CIIU de longitud 4 dígitos o que solo tome esos para la moda? También es posible.



Estoy intentando imputar por similitud de nombre el código CIIU por medio del siguiente código en R

## imputacion por nombre

library(dplyr)

# Función para obtener la moda solo si representa mayoría
moda_con_mayoria <- function(x, umbral = 0.05) {
  x <- na.omit(x)
  if (length(x) == 0) return(NA)
  tab <- table(x)
  moda <- names(tab)[which.max(tab)]
  prop <- max(tab) / sum(tab)
  if (prop >= umbral) return(moda) else return(NA)
}

# Aplicar imputación con control de mayoría
proveedores_ciiu_imputado2 <- proveedores_ciiu_imputado %>%
  mutate(nombre_base = word(MCOD_1, 1, 3)) %>%
  group_by(nombre_base) %>%
  mutate(
    moda_valor = moda_con_mayoria(CIIU_final, umbral = 0.05),
    CIIU_final = if_else(is.na(CIIU_final), moda_valor, CIIU_final)
  ) %>%
  ungroup() %>%
  select(-nombre_base, -moda_valor)

Pero veo que no lo hace como yo quiera, pues en este ejemplo debería imputarse el 4661 que es el que mas se repite de los nombres similares del grupo TRAFIGURA, pero esta poniendo un 10 y un NA

MCOD_1	ANTES	CIIU_final
TRAFIGURA ENVIRONMENTAL S	NA	NA
TRAFIGURA TRADING LLC	4669	4669
TRAFIGURA SECURITISATION	NA	10
TRAFIGURA MARITIME LOGIST	6412	6412
TRAFIGURA PTE LTD	4290	4290
C.I. TRAFIGURA PETROLEUM	4661	4661
TRAFIGURA ENERGY COLOMBIA	4661	4661
TRAFIGURA MARKETING COLOM	4661	4661

como lo resuelvo
