Perfecto. A continuaci√≥n te presento un script completo en R con:
	1.	C√°lculo de variaciones anuales.
	2.	Alertas para activo, pasivo, patrimonio, y sus versiones corrientes y no corrientes.
	3.	C√°lculo de razones financieras clave: liquidez, estructura de capital, autonom√≠a, apalancamiento.
	4.	Generaci√≥n de banderas de alerta con umbrales justificados.
	5.	Clasificaci√≥n de riesgo.
	6.	Exportaci√≥n final a un Excel con m√∫ltiples hojas.
	7.	Comentarios explicativos de cada m√©trica y umbral.

‚∏ª

‚úÖ SCRIPT COMPLETO Y DOCUMENTADO EN R

# üì¶ Cargar paquetes necesarios
library(readxl)
library(dplyr)
library(openxlsx)
library(scales)

# üìÇ Paso 1: Cargar base de datos
path <- "//10.11.46.150/cdn/JCVR/Rutinas de Monitoreo/Analisis_EEFF/datos"
archivo <- "reporte_eeff_2023.xlsx"
datos <- read_excel(file.path(path, archivo))

# üßπ Paso 2: Calcular variaciones anuales
datos_var <- datos %>%
  arrange(NIT, `Ano Fiscal`) %>%
  group_by(NIT) %>%
  mutate(
    var_activos = (`Total Activos` / lag(`Total Activos`) - 1) * 100,
    var_pasivos = (`Total Pasivos` / lag(`Total Pasivos`) - 1) * 100,
    var_patrimonio = (`Patrimonio` / lag(`Patrimonio`) - 1) * 100,
    var_act_corr = (`Activo Corriente` / lag(`Activo Corriente`) - 1) * 100,
    var_pas_corr = (`Pasivo Corriente` / lag(`Pasivo Corriente`) - 1) * 100,
    var_act_ncorr = (`Activo No Corriente` / lag(`Activo No Corriente`) - 1) * 100,
    var_pas_ncorr = (`Pasivo No Corriente` / lag(`Pasivo No Corriente`) - 1) * 100,
    var_ventas = (`Ventas Netas` / lag(`Ventas Netas`) - 1) * 100,
    var_utilidad = (`Utilidad Neta` / lag(`Utilidad Neta`) - 1) * 100,
    var_cap_trab = (`Capital de Trabajo` / lag(`Capital de Trabajo`) - 1) * 100
  ) %>%
  ungroup()

# üß† Paso 3: Calcular razones financieras
datos_ratios <- datos_var %>%
  mutate(
    razon_liquidez = ifelse(`Pasivo Corriente` != 0, `Activo Corriente` / `Pasivo Corriente`, NA),     # Capacidad de cubrir obligaciones de corto plazo
    razon_autonomia = ifelse(`Total Activos` != 0, `Patrimonio` / `Total Activos`, NA),                # Qu√© porcentaje de los activos est√° financiado por capital propio
    razon_endeudamiento = ifelse(`Total Activos` != 0, `Total Pasivos` / `Total Activos`, NA),         # Proporci√≥n de deuda sobre activos
    razon_capital_trab = `Activo Corriente` - `Pasivo Corriente`,                                      # Fondo disponible para operaciones
    razon_apalancamiento = ifelse(`Patrimonio` != 0, `Total Pasivos` / `Patrimonio`, NA)               # Nivel de apalancamiento con respecto al capital propio
  )

# ‚ö†Ô∏è Paso 4: Generar alertas basadas en reglas
datos_alertas <- datos_ratios %>%
  mutate(
    alerta_utilidad_neg = ifelse(`Utilidad Neta` < 0, 1, 0),
    alerta_var_ventas = ifelse(abs(var_ventas) > 50, 1, 0),
    alerta_endeudamiento = ifelse(razon_endeudamiento > 0.85, 1, 0),
    alerta_rent_op_baja = ifelse(`Rentabilidad Operativa` < 0.05, 1, 0),
    alerta_cap_trab_neg = ifelse(razon_capital_trab < 0, 1, 0),
    
    alerta_var_activo = ifelse(abs(var_activos) > 50, 1, 0),
    alerta_var_pasivo = ifelse(abs(var_pasivos) > 50, 1, 0),
    alerta_var_patrimonio = ifelse(abs(var_patrimonio) > 50, 1, 0),
    alerta_var_corrientes = ifelse(abs(var_act_corr) > 50 | abs(var_pas_corr) > 50, 1, 0),
    alerta_var_nocorrientes = ifelse(abs(var_act_ncorr) > 50 | abs(var_pas_ncorr) > 50, 1, 0),

    alerta_liquidez_baja = ifelse(razon_liquidez < 1, 1, 0),
    alerta_autonomia_baja = ifelse(razon_autonomia < 0.25, 1, 0),    # patrimonio bajo respecto a activos
    alerta_apalancamiento_alto = ifelse(razon_apalancamiento > 3, 1, 0),

    # Puntaje total
    puntaje_alerta = rowSums(across(starts_with("alerta_")), na.rm = TRUE),

    # Clasificaci√≥n de riesgo
    nivel_riesgo = case_when(
      puntaje_alerta == 0 ~ "Bajo",
      puntaje_alerta <= 3 ~ "Medio",
      puntaje_alerta > 3 ~ "Alto"
    )
  )

# üìù Paso 5: Exportar a Excel con varias hojas
wb <- createWorkbook()

# Hoja completa
addWorksheet(wb, "Resumen_Riesgo")
writeData(wb, "Resumen_Riesgo", datos_alertas)

# Hojas por nivel
niveles <- unique(datos_alertas$nivel_riesgo)
for (nivel in niveles) {
  hoja <- paste0("Riesgo_", nivel)
  addWorksheet(wb, hoja)
  writeData(wb, hoja, datos_alertas %>% filter(nivel_riesgo == nivel))
}

# Guardar archivo
output_file <- file.path(path, "alertas_financieras_completo.xlsx")
saveWorkbook(wb, output_file, overwrite = TRUE)
cat("‚úÖ Archivo exportado en:", output_file, "\n")


‚∏ª

üìñ Explicaci√≥n de razones y umbrales

M√©trica	Definici√≥n	Umbral de alerta	Justificaci√≥n
Liquidez corriente	Activo Corriente / Pasivo Corriente	< 1	No puede cubrir sus obligaciones de corto plazo
Autonom√≠a financiera	Patrimonio / Total Activos	< 0.25	Alta dependencia de financiaci√≥n externa
Endeudamiento	Total Pasivos / Total Activos	> 0.85	Alto riesgo financiero por sobreapalancamiento
Apalancamiento	Total Pasivos / Patrimonio	> 3	M√∫ltiplos excesivos de deuda sobre capital propio
Capital de trabajo	Activo Corriente - Pasivo Corriente	< 0	Problemas de liquidez operativa
Variaciones anuales	Variaci√≥n porcentual a√±o a a√±o de cada rubro financiero	¬±50%	Cambios abruptos o inusuales deben ser revisados
Utilidad neta	Resultado del ejercicio	< 0	P√©rdidas persistentes pueden comprometer viabilidad
Rentabilidad operativa	Utilidad operativa / Ventas	< 5%	Bajo margen para operar eficientemente


‚∏ª

¬øDeseas que prepare tambi√©n una visualizaci√≥n tipo ggplot2 o plotly con estos datos? Tambi√©n podemos exportarlo a CSV para Power BI o armar un Shiny App si deseas explorarlo de forma interactiva.

#######

Perfecto, ya tienes una base s√≥lida. Aqu√≠ te dejo un resumen estructurado con comentarios adicionales y sugerencias para completar tu flujo con documentaci√≥n clara, generaci√≥n de umbrales y otras medidas:

‚∏ª

üéØ Objetivo

Identificar se√±ales de alerta en los estados financieros de contrapartes para detectar posibles riesgos asociados a:
	‚Ä¢	Lavado de activos (LA),
	‚Ä¢	Financiaci√≥n del terrorismo (FT),
	‚Ä¢	Personas expuestas pol√≠ticamente (PADM),
	‚Ä¢	Corrupci√≥n (FCPA).

‚∏ª

üõ†Ô∏è Metodolog√≠a

1. Carga y limpieza de datos
	‚Ä¢	Importaci√≥n desde Excel.
	‚Ä¢	Validaci√≥n de consistencia en variables clave por compa√±√≠a y a√±o.
	‚Ä¢	Homogeneizaci√≥n de nombres y tipos de columnas.

2. C√°lculo de variaciones anuales

Variables calculadas:
	‚Ä¢	Variaci√≥n de activos, ventas, utilidad neta y capital de trabajo.

mutate(
  var_activos = (`Total Activos` / lag(`Total Activos`) - 1) * 100,
  var_ventas = (`Ventas Netas` / lag(`Ventas Netas`) - 1) * 100,
  var_utilidad = (`Utilidad Neta` / lag(`Utilidad Neta`) - 1) * 100,
  var_cap_trab = (`Capital de Trabajo` / lag(`Capital de Trabajo`) - 1) * 100
)

3. Generaci√≥n de indicadores adicionales
	‚Ä¢	Banderas por variaciones at√≠picas:
	‚Ä¢	Ventas con variaciones superiores al ¬±50%.
	‚Ä¢	Utilidad neta negativa.
	‚Ä¢	√çndice de endeudamiento alto (>85%).
	‚Ä¢	Rentabilidad operativa baja (<5%).
	‚Ä¢	Capital de trabajo negativo.

mutate(
  alerta_utilidad_neg = ifelse(`Utilidad Neta` < 0, 1, 0),
  alerta_var_ventas = ifelse(abs(var_ventas) > 50, 1, 0),
  alerta_endeudamiento = ifelse(`Indice de Endeudamiento` > 0.85, 1, 0),
  alerta_rent_op_baja = ifelse(`Rentabilidad Operativa` < 0.05, 1, 0),
  alerta_cap_trab_neg = ifelse(`Capital de Trabajo` < 0, 1, 0)
)

	‚Ä¢	Razones adicionales sugeridas:
	‚Ä¢	Liquidez corriente (Activo Corriente / Pasivo Corriente)
	‚Ä¢	Rentabilidad sobre patrimonio (Utilidad Neta / Patrimonio)
	‚Ä¢	Cobertura de intereses (si hay Ebit / Gastos financieros)

4. Identificaci√≥n de se√±ales de alerta
	‚Ä¢	Aplicaci√≥n de reglas con base en umbrales definidos.
	‚Ä¢	Posible detecci√≥n de outliers mediante m√©todos estad√≠sticos (z-score, IQR).

‚∏ª

üìä Explicaci√≥n de umbrales

Variable	Regla	Justificaci√≥n
Variaci√≥n ventas	¬±50%	Alta volatilidad en ingresos puede indicar irregularidades o concentraci√≥n de clientes.
Utilidad neta	< 0	Resultados negativos continuos generan alerta sobre sostenibilidad financiera.
Endeudamiento	> 0.85	Niveles altos de deuda sugieren estr√©s financiero o apalancamiento excesivo.
Rentabilidad operativa	< 5%	Margen operacional bajo reduce capacidad de reinversi√≥n.
Capital de trabajo	< 0	Riesgo de iliquidez y falta de recursos para operar.


‚∏ª

üß™ Siguientes pasos sugeridos
	1.	Agregar puntajes de riesgo acumulado (suma ponderada de alertas).
	2.	Segmentaci√≥n por niveles de riesgo (Ej: bajo, medio, alto).
	3.	Exportaci√≥n de resultados a Excel o Power BI para visualizaci√≥n.

datos_alertas <- datos_alertas %>%
  mutate(
    puntaje_alerta = alerta_utilidad_neg + alerta_var_ventas +
                     alerta_endeudamiento + alerta_rent_op_baja +
                     alerta_cap_trab_neg,
    nivel_riesgo = case_when(
      puntaje_alerta == 0 ~ "Bajo",
      puntaje_alerta <= 2 ~ "Medio",
      puntaje_alerta > 2 ~ "Alto"
    )
  )

	4.	Visualizaci√≥n y dashboards con ggplot2, plotly, shiny, o conexi√≥n directa con Power BI / Tableau.

‚∏ª

¬øDeseas que completemos tambi√©n un script para exportar los resultados finales a Excel con formato y hojas separadas por tipo de alerta o riesgo?


Claro, aqu√≠ tienes un script completo en R que implementa toda la metodolog√≠a que mencionaste: carga, c√°lculo de variaciones, alertas, puntaje de riesgo, clasificaci√≥n de nivel de riesgo y exportaci√≥n del resultado a Excel. Todo est√° comentado paso a paso.

‚∏ª

‚úÖ SCRIPT COMPLETO EN R

# üì¶ Cargar paquetes necesarios
library(readxl)
library(dplyr)
library(openxlsx)
library(writexl)
library(scales)

# üìÇ Paso 1: Cargar base de datos
path <- "//10.11.46.150/cdn/JCVR/Rutinas de Monitoreo/Analisis_EEFF/datos"
archivo <- "reporte_eeff_2023.xlsx"
datos <- read_excel(file.path(path, archivo))

# Verificar estructura inicial
str(datos)

# üßπ Paso 2: Calcular variaciones anuales por compa√±√≠a
datos_var <- datos %>%
  arrange(NIT, `Ano Fiscal`) %>%
  group_by(NIT) %>%
  mutate(
    var_activos = (`Total Activos` / lag(`Total Activos`) - 1) * 100,
    var_ventas = (`Ventas Netas` / lag(`Ventas Netas`) - 1) * 100,
    var_utilidad = (`Utilidad Neta` / lag(`Utilidad Neta`) - 1) * 100,
    var_cap_trab = (`Capital de Trabajo` / lag(`Capital de Trabajo`) - 1) * 100
  ) %>%
  ungroup()

# üß† Paso 3: Generar alertas y banderas de riesgo
datos_alertas <- datos_var %>%
  mutate(
    alerta_utilidad_neg = ifelse(`Utilidad Neta` < 0, 1, 0),
    alerta_var_ventas = ifelse(abs(var_ventas) > 50, 1, 0),
    alerta_endeudamiento = ifelse(`Indice de Endeudamiento` > 0.85, 1, 0),
    alerta_rent_op_baja = ifelse(`Rentabilidad Operativa` < 0.05, 1, 0),
    alerta_cap_trab_neg = ifelse(`Capital de Trabajo` < 0, 1, 0),
    
    # Puntaje acumulado de alertas
    puntaje_alerta = alerta_utilidad_neg + alerta_var_ventas +
                     alerta_endeudamiento + alerta_rent_op_baja +
                     alerta_cap_trab_neg,
    
    # Clasificaci√≥n del nivel de riesgo
    nivel_riesgo = case_when(
      puntaje_alerta == 0 ~ "Bajo",
      puntaje_alerta <= 2 ~ "Medio",
      puntaje_alerta > 2 ~ "Alto"
    )
  )

# üßÆ Paso 4: Agregar razones financieras adicionales (opcional)
datos_alertas <- datos_alertas %>%
  mutate(
    razon_liquidez = ifelse(`Pasivo Corriente` != 0, `Activo Corriente` / `Pasivo Corriente`, NA),
    rentabilidad_patrimonio = ifelse(`Patrimonio` != 0, `Utilidad Neta` / `Patrimonio`, NA)
  )

# üìÅ Paso 5: Exportar resultados a Excel con varias hojas

# Crear workbook
wb <- createWorkbook()

# Agregar hoja principal con datos y alertas
addWorksheet(wb, "Resumen_Riesgo")
writeData(wb, "Resumen_Riesgo", datos_alertas)

# Agregar hojas por nivel de riesgo
niveles <- unique(datos_alertas$nivel_riesgo)

for (nivel in niveles) {
  hoja <- paste0("Riesgo_", nivel)
  addWorksheet(wb, hoja)
  writeData(wb, hoja, datos_alertas %>% filter(nivel_riesgo == nivel))
}

# Guardar archivo
ruta_salida <- file.path(path, "alertas_financieras_riesgo.xlsx")
saveWorkbook(wb, ruta_salida, overwrite = TRUE)

cat("‚úÖ Exportaci√≥n completada exitosamente: ", ruta_salida, "\n")


‚∏ª

üìå Notas adicionales
	‚Ä¢	Aseg√∫rate de que los nombres de columnas (Total Activos, Ventas Netas, etc.) coincidan exactamente con los del archivo Excel.
	‚Ä¢	Puedes agregar m√°s razones o cambiar los umbrales en las reglas.
	‚Ä¢	Si deseas usar un m√©todo estad√≠stico como IQR o z-score para identificar outliers, tambi√©n se puede incorporar.

‚∏ª

¬øQuieres que incluya visualizaciones o que este script se conecte autom√°ticamente a Power BI con un archivo CSV plano?


Mi objetivo es el siguiente: Identificar se√±ales de alerta identificar al analizar los estados financieros de las contrapartes de la compa√±√≠a, con el fin de analizar posibles riesgos en materia de riesgos LAFTFPADM y FCPA. 

quiero generar al final una data con las variaciones
Explicaciones de los umbrales
Otras medidas y metodolog√≠as

üõ†Ô∏è Metodolog√≠a
	1.	Carga y limpieza de datos: Integrar la informaci√≥n financiera por compa√±√≠a y a√±o fiscal, verificando consistencia, tipos de datos y valores faltantes.
	2.	C√°lculo de variaciones anuales: Medir la variaci√≥n porcentual a√±o a a√±o de las principales variables financieras.
	3.	Generaci√≥n de indicadores adicionales:
	‚Ä¢	Creaci√≥n de banderas por variaciones at√≠picas (porcentajes extremos).
	‚Ä¢	An√°lisis de razones financieras clave.
	‚Ä¢	Evaluaci√≥n de consistencia entre cuentas (ej. activos = pasivos + patrimonio).
	4.	Identificaci√≥n de se√±ales de alerta:
	‚Ä¢	Creaci√≥n de alertas basadas en reglas predefinidas (ej. disminuci√≥n abrupta de ventas, utilidad negativa recurrente, endeudamiento excesivo, etc.).
	‚Ä¢	Detecci√≥n de comportamientos inusuales (outliers estad√≠sticos).

library(openxlsx)
library(scales)
library('xlsx')
library('writexl')
library("readxl")

# Cargar base de datos
path <- "//10.11.46.150/cdn/JCVR/Rutinas de Monitoreo/Analisis_EEFF/datos"
datos <- read_excel(file.path(path, "reporte_eeff_2023.xlsx"))

# Paso 1: Calcular variaciones anuales por compa√±√≠a
datos_var <- datos %>%
  arrange(NIT, `Ano Fiscal`) %>%
  group_by(NIT) %>%
  mutate(
    var_activos = (`Total Activos` / lag(`Total Activos`) - 1) * 100,
    var_ventas = (`Ventas Netas` / lag(`Ventas Netas`) - 1) * 100,
    var_utilidad = (`Utilidad Neta` / lag(`Utilidad Neta`) - 1) * 100,
    var_cap_trab = (`Capital de Trabajo` / lag(`Capital de Trabajo`) - 1) * 100
  ) %>%
  ungroup()

# Paso 2: Crear banderas por variaciones at√≠picas
datos_alertas <- datos_var %>%
  mutate(
    alerta_utilidad_neg = ifelse(`Utilidad Neta` < 0, 1, 0),
    alerta_var_ventas = ifelse(abs(var_ventas) > 50, 1, 0),
    alerta_endeudamiento = ifelse(`Indice de Endeudamiento` > 0.85, 1, 0),
    alerta_rent_op_baja = ifelse(`Rentabilidad Operativa` < 0.05, 1, 0),
    alerta_cap_trab_neg = ifelse(`Capital de Trabajo` < 0, 1, 0)
  )

Perfecto, Juan Carlos. Aqu√≠ tienes un objetivo, una metodolog√≠a y una propuesta de estructura de c√≥digo en R para generar el an√°lisis de se√±ales de alerta en estados financieros con fines de detecci√≥n de posibles riesgos de lavado de activos (LA/FT):

‚∏ª

üéØ Objetivo del an√°lisis

Detectar se√±ales de alerta financieras en contrapartes mediante un monitoreo hist√≥rico de indicadores clave en sus estados financieros, con el prop√≥sito de identificar comportamientos at√≠picos que puedan estar asociados a posibles riesgos de lavado de activos o financiamiento del terrorismo (LA/FT). Este an√°lisis busca complementar la variaci√≥n interanual tradicional con t√©cnicas m√°s avanzadas de an√°lisis, visualizaci√≥n y generaci√≥n de alertas automatizadas.

‚∏ª

üõ†Ô∏è Metodolog√≠a
	1.	Carga y limpieza de datos: Integrar la informaci√≥n financiera por compa√±√≠a y a√±o fiscal, verificando consistencia, tipos de datos y valores faltantes.
	2.	C√°lculo de variaciones anuales: Medir la variaci√≥n porcentual a√±o a a√±o de las principales variables financieras.
	3.	Generaci√≥n de indicadores adicionales:
	‚Ä¢	Creaci√≥n de banderas por variaciones at√≠picas (porcentajes extremos).
	‚Ä¢	An√°lisis de razones financieras clave.
	‚Ä¢	Evaluaci√≥n de consistencia entre cuentas (ej. activos = pasivos + patrimonio).
	4.	Identificaci√≥n de se√±ales de alerta:
	‚Ä¢	Creaci√≥n de alertas basadas en reglas predefinidas (ej. disminuci√≥n abrupta de ventas, utilidad negativa recurrente, endeudamiento excesivo, etc.).
	‚Ä¢	Detecci√≥n de comportamientos inusuales (outliers estad√≠sticos).
	5.	Visualizaci√≥n del desempe√±o financiero:
	‚Ä¢	Gr√°ficos de evoluci√≥n por NIT o compa√±√≠a.
	‚Ä¢	Matriz de calor de alertas por a√±o.
	6.	Reporte autom√°tico: Exportar resumen ejecutivo con alertas, an√°lisis y visualizaciones en formato Excel o PDF.

‚∏ª

üìä C√≥digo en R (estructura base con comentarios)

# Cargar librer√≠as
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(scales)

# Cargar base de datos
datos <- read.csv("estados_financieros.csv")  # Reemplaza con tu ruta

# Paso 1: Calcular variaciones anuales por compa√±√≠a
datos_var <- datos %>%
  arrange(NIT, anio_fiscal) %>%
  group_by(NIT) %>%
  mutate(
    var_activos = (total_activos / lag(total_activos) - 1) * 100,
    var_ventas = (ventas_net / lag(ventas_net) - 1) * 100,
    var_utilidad = (utilidad_neta / lag(utilidad_neta) - 1) * 100,
    var_cap_trab = (capital_trabajo / lag(capital_trabajo) - 1) * 100
  ) %>%
  ungroup()

# Paso 2: Crear banderas por variaciones at√≠picas
datos_alertas <- datos_var %>%
  mutate(
    alerta_utilidad_neg = ifelse(utilidad_neta < 0, 1, 0),
    alerta_var_ventas = ifelse(abs(var_ventas) > 50, 1, 0),
    alerta_endeudamiento = ifelse(indice_endeudamiento > 0.85, 1, 0),
    alerta_rent_op_baja = ifelse(rentabilidad_operativa < 0.05, 1, 0),
    alerta_cap_trab_neg = ifelse(capital_trabajo < 0, 1, 0)
  )

# Paso 3: Visualizaci√≥n de alertas
ggplot(datos_alertas, aes(x = anio_fiscal, fill = factor(alerta_utilidad_neg))) +
  geom_bar(position = "stack") +
  facet_wrap(~compania) +
  scale_fill_manual(values = c("0" = "grey", "1" = "red")) +
  labs(title = "Alertas por utilidad neta negativa", fill = "Alerta")

# Paso 4: Crear resumen de alertas por compa√±√≠a
resumen_alertas <- datos_alertas %>%
  group_by(NIT, compania) %>%
  summarise(
    a√±os_alerta_utilidad = sum(alerta_utilidad_neg, na.rm = TRUE),
    a√±os_alerta_ventas = sum(alerta_var_ventas, na.rm = TRUE),
    a√±os_alerta_endeudamiento = sum(alerta_endeudamiento, na.rm = TRUE),
    total_alertas = rowSums(across(starts_with("alerta_")), na.rm = TRUE)
  )

# Paso 5: Exportar resumen a Excel
write.xlsx(list("Resumen Alertas" = resumen_alertas,
                "Datos con Alertas" = datos_alertas),
           file = "reporte_alertas_financieras.xlsx")


‚∏ª

üö© Ideas adicionales que puedes implementar
	‚Ä¢	Ranking de riesgo financiero por compa√±√≠a.
	‚Ä¢	Sem√°foros (verde, amarillo, rojo) seg√∫n n√∫mero de alertas.
	‚Ä¢	Score de alerta ponderado (por tipo y severidad).
	‚Ä¢	Modelos de detecci√≥n de outliers con caret, lof, o randomForest.
	‚Ä¢	Panel en Shiny para navegaci√≥n interactiva por NIT.

‚∏ª

¬øQuieres que generemos juntos un ejemplo de datos sint√©ticos para probarlo o deseas ajustar el c√≥digo con tus datos reales?
